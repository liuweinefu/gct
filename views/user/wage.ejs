<!--用户管理页面 -->
<table id="wage_table">
</table>
<div id="wage_table_toolbar">
    <table style="width:100%">
        <tr>
            <td style="width:30%">
                <input id="base_wage" class="easyui-numberbox" value="<%=base_wage%>" data-options="min:0,precision:2,label:'底薪:',labelPosition: 'top',prompt: '底薪'" style="width:200px">
            </td>
            <td style="width:30%">
                <input id="deduction_wage" class="easyui-numberbox" value="0.00" data-options="min:0,precision:2,label:'奖金:',labelPosition: 'top',prompt: '奖金'" style="width:200px">
            </td>
            <td>
                <div>
                    <a href="#" class="easyui-linkbutton" iconCls="" plain="false" onclick="wage.delete()">删除</a>
                    <a href="#" class="easyui-linkbutton" iconCls="" plain="false" onclick="wage.redo()">撤销</a>
                    <a href="#" class="easyui-linkbutton" iconCls="" plain="false" onclick="wage.save()">结算</a>
                </div>
            </td>
        </tr>
    </table>
</div>

<script>
    wage = {};

    wage.setFields = function() {
        let fields = [];
        fields[0] = [];
        fields[0].push({
            field: 'ck',
            checkbox: true
        });
        fields[0].push({
            field: 'id',
            title: '消费ID',
            width: 85
        });
        fields[0].push({
            field: 'service_user_name',
            title: '服务者',
            width: 100,
        });
        fields[0].push({
            field: 'create_time',
            title: '消费时间',
            width: 220,
            formatter: function(value, row, index) {
                if (!Number.isNaN(Date.parse(value))) {
                    return new Date(Date.parse(value)).toLocaleString();
                } else {
                    return '';
                }
            },
        });
        fields[0].push({
            field: 'price',
            title: '消费金额',
            width: 100,
            formatter: function(value, row, index) {
                return '￥' + Number.parseFloat(value).toFixed(2);
            },
        });
        fields[0].push({
            field: 'count',
            title: '消费数量',
            width: 100,
        });
        fields[0].push({
            field: 'is_cash',
            title: '现金',
            width: 100,
            formatter: function(value, row, index) {
                return value === 1 ? '是' : '否';
            },
        });
        fields[0].push({
            field: 'commodity_name',
            title: '商品',
            width: 100,
        });
        fields[0].push({
            field: 'commodity_price',
            title: '商品售价',
            width: 100,
            formatter: function(value, row, index) {
                return '￥' + Number.parseFloat(value).toFixed(2);
            },
        });
        fields[0].push({
            field: 'member_name',
            title: '会员',
            width: 100,
        });
        fields[0].push({
            field: 'write_user_name',
            title: '记录者',
            width: 100,
        });

        fields[0].push({
            field: 'is_close',
            title: '已结算',
            width: 100,
            formatter: function(value, row, index) {
                return value === 1 ? '是' : '否';
            },
        });

        return fields;
    };

    wage.delete = function() {
        let deleteRow = Object.assign([], $('#wage_table').datagrid('getChecked'));
        deleteRow.forEach(function(row) {
            $('#wage_table').datagrid('deleteRow', $('#wage_table').datagrid('getRowIndex', row));
        });
    };

    wage.redo = function() {
        $('#wage_table').datagrid('rejectChanges');
    };

    wage.save = function() {


        deleteIDs = $('#wage_table').datagrid('getChanges', 'deleted').map(function(record) {
            return record.id
        });
        baseWage = $('#base_wage').textbox('getValue');
        deductionWage = $('#deduction_wage').textbox('getValue');

        message = '员工:<b><%=name%></b> </br>底薪:<b>' + baseWage + '</b>元</br>奖金:<b>' + deductionWage + '</b>元</br>合计:<b>' + (baseWage * 100 + deductionWage * 100) / 100 + '</b>元';
        $.messager.confirm('确认结算', message, function(save) {
            if (save) {
                $('#wage_table').datagrid('loading');
                $.post('user/saveWage', {
                    baseWage: baseWage,
                    deductionWage: deductionWage,
                    deleteIDs: JSON.stringify(deleteIDs),
                }, function(data) {
                    //console.log(data);
                    if (data.err) {
                        $.messager.alert('错误', data.message, 'error', function() {
                            $('#wage_table').datagrid('loaded');
                        });

                    } else {
                        $.messager.alert('结算完成', data.message + '</br>' + message, 'info', function() {
                            $('#wage_table').datagrid('loaded');
                            $('#mainImport').window('close');
                            $('#mainImport').empty();
                        });


                    }
                }, 'json');
            } else {
                $('#mix_table').datagrid('loaded');
            }
        });







    };
    wage.init = function() {
        $('#mainImport').window('setTitle', "<b><%=name%></b>  的工资结算");
        $('#wage_table').datagrid({
            idField: 'id',
            //loadMsg: '数据加载中,请稍后',
            fit: true,
            fitColumns: true,
            singleSelect: false,
            url: '/user/wage',
            method: 'post',
            toolbar: '#wage_table_toolbar',
            striped: true,
            pagination: true,
            rownumbers: true,
            pageNumber: 1,
            pageSize: '30',
            pageList: [30, 50, 100],
            //sortName: 'id',
            remoteSort: false,
            multiSort: true,
            columns: wage.setFields(),
            groupField: 'commodity_id',
            view: groupview,
            groupFormatter: function(value, rows) {
                return '(' + rows[0].commodity_name + '): ' + rows.length + '次';
            }

        });

        //$('#wage_table').datagrid('getPanel').keydown(wage.keydown);
    };



    //初始化
    $(document).ready(function() {
        wage.init();
    });
</script>